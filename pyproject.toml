[project]
name = "pilgram2"
version = "2.0.9"
requires-python = ">=3.10"
description = "library for instagram filters"
authors = [
  { name = "Michael G", email = "me@mgineer85.de" },
  { name = "Akiomi Kamakura", email = "akiomik@gmail.com" },
]
maintainers = [{ name = "Michael G", email = "me@mgineer85.de" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
  "pillow",
  "instagram",
  "instagram-filters",
  "css-filters",
  "image-blending",
  "blend-modes",
  "image-processing",
  "data-augmentation",
]

dependencies = ["numpy>=2.0.1", "pillow>=10.0.0"]

[project.urls]
Homepage = "https://github.com/mgineer85/pilgram2"
Repository = "https://github.com/mgineer85/pilgram2"
"Bug Tracker" = "https://github.com/mgineer85/pilgram2/issues"


[build-system]
requires = ["uv_build>=0.8.3,<0.10.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = "./"
module-name = "pilgram2"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "W",  # pycodestyle
  "F",  # pyflakes
  "B",  # bugbear
  "UP", # pyupgrade
  "I",  # isort
  #"D",   # pydocstyle   # add later
]

[tool.pytest.ini_options]
addopts = "-v --cov=pilgram2 --benchmark-skip"

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[dependency-groups]
dev = [
  "ruff",
  "pytest>=8.1.0",
  "pytest-cov>=5.0.0",
  "pytest-benchmark>=5.0.0",
  "pytest-mock>=3.10.0",
  "pyright",
  "poethepoet",
]


[tool.coverage.report]
show_missing = true


# uv does not yet support [tool.pdm.scripts], so we skip this for now... https://github.com/astral-sh/uv/issues/5903
[tool.poe.tasks]
lint = [
  { cmd = "uv run pyright" },
  { cmd = "uv run ruff check" },
  { cmd = "uv run ruff format --check" },
]
format = [{ cmd = "uv run ruff check --fix" }, { cmd = "uv run ruff format" }]
test = [{ cmd = "pytest --cov-report=term --cov-report=xml:coverage.xml" }]
benchmark = [
  { cmd = "pytest --benchmark-only --benchmark-max-time=5 --benchmark-columns='mean,stddev,min,max'" },
]
